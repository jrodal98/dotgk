name: Deploy

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: linux-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: linux-aarch64-gnu
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - build: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
          - build: macos-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "build"
          target: ${{ matrix.target }}
          toolchain: stable
          args: "--release"

      - name: Build archive
        shell: bash
        run: |
          binary_name="dotgk"
          dirname="${binary_name}-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [[ "${{ matrix.os }}" == windows* ]]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname/"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname/"
          fi
          if [[ "${{ matrix.os }}" == windows* ]]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
